@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# 解析依赖列表（原逻辑）
string(REPLACE "," ";" REDIS_PLUS_PLUS_DEPENDS_LIST @REDIS_PLUS_PLUS_DEPENDS@)

# 手动处理hiredis和hiredis_ssl，其他依赖仍用find_dependency
foreach(REDIS_PLUS_PLUS_DEP ${REDIS_PLUS_PLUS_DEPENDS_LIST})
    # 处理hiredis（无CMake配置文件，手动查找）
    if(REDIS_PLUS_PLUS_DEP STREQUAL "hiredis")
        # 查找hiredis头文件
        find_path(HIREDIS_INCLUDE_DIR
            NAMES hiredis.h
            PATHS /usr/include/hiredis
            DOC "hiredis header directory"
        )
        # 查找hiredis库文件
        find_library(HIREDIS_LIBRARY
            NAMES hiredis
            PATHS /usr/lib/x86_64-linux-gnu
            DOC "hiredis library file"
        )
        # 验证查找结果
        if(NOT HIREDIS_INCLUDE_DIR OR NOT HIREDIS_LIBRARY)
            message(FATAL_ERROR "hiredis not found. Install via: sudo apt install libhiredis-dev")
        endif()
        # 设置hiredis变量（模拟CMake配置文件输出）
        set(hiredis_FOUND TRUE)
        set(hiredis_INCLUDE_DIRS ${HIREDIS_INCLUDE_DIR})
        set(hiredis_LIBRARIES ${HIREDIS_LIBRARY})

    # 处理hiredis_ssl（TLS支持，同样手动查找）
    elseif(REDIS_PLUS_PLUS_DEP STREQUAL "hiredis_ssl")
        # 查找hiredis_ssl头文件
        find_path(HIREDIS_SSL_INCLUDE_DIR
            NAMES ssl.h
            PATHS /usr/includehiredis
            DOC "hiredis_ssl header directory"
        )
        # 查找hiredis_ssl库文件
        find_library(HIREDIS_SSL_LIBRARY
            NAMES hiredis_ssl
            PATHS /usr/lib/x86_64-linux-gnu
            DOC "hiredis_ssl library file"
        )
        # 验证查找结果
        if(NOT HIREDIS_SSL_INCLUDE_DIR OR NOT HIREDIS_SSL_LIBRARY)
            message(FATAL_ERROR "hiredis_ssl not found. Install libhiredis-dev with SSL support.")
        endif()
        # 设置hiredis_ssl变量
        set(hiredis_ssl_FOUND TRUE)
        set(hiredis_ssl_INCLUDE_DIRS ${HIREDIS_SSL_INCLUDE_DIR})
        set(hiredis_ssl_LIBRARIES ${HIREDIS_SSL_LIBRARY})

    # 其他依赖（如有）仍使用find_dependency
    else()
        find_dependency(${REDIS_PLUS_PLUS_DEP} REQUIRED)
    endif()
endforeach()

# 引入目标文件（原逻辑保留）
include("${CMAKE_CURRENT_LIST_DIR}/redis++-targets.cmake")

check_required_components(redis++)
